
@{
    ViewBag.Title = "LineShow";
}
@{ 
   /*This process loads info from the server and uses CSS to make a graph.*/
   /*NOTE : This would be much easier using the <canvas> element, and providing server rendered values for JavaScript to draw the graph*/
   /* The technique described above would be an example of both server rendering (providing data to HTML) and client rendering (JS drawing the actual graph). */
}
<h2>Cartesian Line Results</h2>
<section id="cartesiancontainer">
    <div id="cartesianplane">
        <span 
              id="point1" 
              class="point" 
              style=
                "position:absolute;
                left:@(((decimal)ViewBag.x1 / (decimal)ViewBag.boundX)*100)%; 
                bottom:@(((decimal)ViewBag.y1 / (decimal)ViewBag.boundY)*100)%;"
              title="Point 1 at (@ViewBag.x1, @ViewBag.y1)">
        </span>
        <span id="point2"
              class="point"
              style=
                "position:absolute;
                left:@(((decimal)ViewBag.x2 / (decimal)ViewBag.boundX)*100)%; 
                bottom:@(((decimal)ViewBag.y2 / (decimal)ViewBag.boundY)*100)%;"
              title="Point 2 at (@ViewBag.x2, @ViewBag.y2)">
        </span>
        <span id="Xscalelowerbound">@(ViewBag.boundX * -1)</span>
        <span id="Xscaleupperbound">@ViewBag.boundX</span>
        <span id="Yscalelowerbound">@(ViewBag.boundY * -1)</span>
        <span id="Yscaleupperbound">@ViewBag.boundY</span>
    </div>
</section>

<p style="text-align:center;">
    The line traverses 
    @ViewBag.quadrants
    quadrant@(ViewBag.quadrants!=1 ? "s" : "").
</p>